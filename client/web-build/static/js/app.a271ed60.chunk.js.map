{"version":3,"sources":["assets/fonts/GloriaHallelujah-Regular.ttf","api.js","pages/Home.js","pages/TextToImage.js","shared/header.js","routes/homeStack.js","App.js"],"names":["module","exports","getPosts","fetch","then","res","ok","json","jsonRes","Generate","text","method","headers","Authorization","body","JSON","stringify","model","prompt","num_images","size","response_format","styles","StyleSheet","create","container","display","flexDirection","justifyContent","alignContent","alignItems","marginTop","ImageContainer","marginBottom","width","borderBottomWidth","borderBottomColor","Image","borderRadius","height","Text","fontFamily","textAlign","fontSize","Home","useState","images","setImages","useEffect","list","api","console","log","slice","reverse","ScrollView","View","style","map","image","source","uri","url","_id","flex","input","minHeight","borderColor","color","borderWidth","margin","padding","text2","TextToImage","navigation","loadingMessages","setText","setImage","generateImage","Platform","OS","forEach","element","ToastAndroid","show","TOP","img","data","b64_json","imageData","name","Date","getTime","axios","post","SafeAreaView","TextInput","placeholder","onChangeText","value","Button","onPress","title","navigate","Header","header","headerText","letterSpacing","screens","screen","navigationOptions","headerTitle","HomeStack","createStackNavigator","createAppContainer","App","defaults","baseURL","fetchFonts","Font","Montserrat","require","useFonts","loaded"],"mappings":"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","file":"static/js/app.a271ed60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/GloriaHallelujah-Regular.ttf\";","export const getPosts = async () =>\r\n  await fetch(\"https://ayaura.azurewebsites.net/getImages\")\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    })\r\n    .then((jsonRes) => jsonRes);\r\n\r\nexport const Generate = async (text) =>\r\n  await fetch(`https://api.openai.com/v1/images/generations`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer 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`,\r\n    },\r\n    body: JSON.stringify({\r\n      model: \"image-alpha-001\",\r\n      prompt: text,\r\n      num_images: 1,\r\n      size: \"1024x1024\",\r\n      response_format: \"b64_json\",\r\n    }),\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    })\r\n    .then((jsonRes) => jsonRes);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as api from \"../api\";\r\n\r\nimport { View, Image, StyleSheet, Text, ScrollView } from \"react-native\";\r\n\r\nconst Home = () => {\r\n  const [images, setImages] = useState([]);\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      const list = await api.getPosts();\r\n      console.log(list);\r\n      setImages(list.slice(-30).reverse());\r\n    };\r\n    getPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.container}>\r\n        {images.map((image) => (\r\n          <View key={image._id} style={styles.ImageContainer}>\r\n            <Image source={{ uri: image?.url }} style={styles.Image} />\r\n            <Text style={styles.Text}>{image?.prompt}</Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n/**/\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n  },\r\n\r\n  ImageContainer: {\r\n    marginBottom: 30,\r\n    width: 300,\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: \"black\",\r\n  },\r\n  Image: {\r\n    borderRadius: 10,\r\n    width: 300,\r\n    height: 300,\r\n  },\r\n\r\n  Text: {\r\n    fontFamily: \"Montserrat\",\r\n\r\n    textAlign: \"center\",\r\n    fontSize: 25,\r\n  },\r\n});\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport * as api from \"../api\";\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  TextInput,\r\n  Image,\r\n  StyleSheet,\r\n  Button,\r\n  SafeAreaView,\r\n  Text,\r\n  ToastAndroid,\r\n  Platform,\r\n} from \"react-native\";\r\n\r\nconst TextToImage = ({ navigation }) => {\r\n  const loadingMessages = [\r\n    \"Generating your image...\",\r\n    \"Just a few more seconds...\",\r\n    \"Why did the tomato turn red? Because it saw the salad dressing! ðŸ¤£ðŸ¤£\",\r\n    \"I'm sorry, won't happen again\",\r\n    \"Pls, don't close the app.\",\r\n    \"my developer won't feed me ðŸ¥º.\",\r\n    \"Oh wait, I don't even eat!\",\r\n  ];\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [image, setImage] = useState(\r\n    \"https://png.pngtree.com/png-clipart/20190918/ourmid/pngtree-pink-watercolor-brushes-171474-png-image_1733978.jpg\"\r\n  );\r\n  const handlePress = () => {\r\n    navigation.navigate(\"Home\");\r\n  };\r\n\r\n  const generateImage = async () => {\r\n    Platform.OS === \"android\"\r\n      ? loadingMessages.forEach((element) => {\r\n          ToastAndroid.show(element, 3500);\r\n          ToastAndroid.TOP;\r\n        })\r\n      : console.log(\"not android\");\r\n\r\n    const data = await api.Generate(text);\r\n    const res = data.data[0].b64_json;\r\n    const img = `data:image/jpeg;base64,${res}`;\r\n    setImage(img);\r\n\r\n    const imageData = {\r\n      url: img,\r\n      name: \"image-\" + new Date().getTime(),\r\n      prompt: text,\r\n    };\r\n    const response2 = await axios.post(\"/images\", imageData);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Text style={styles.text}>Imagination on you, rest on us ðŸ¤«</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Imagination is free!\"\r\n        onChangeText={(text) => setText(text)}\r\n        value={text}\r\n      />\r\n\r\n      <Image source={{ uri: image }} style={styles.image} />\r\n\r\n      <Button\r\n        color=\"#3C84AB\"\r\n        onPress={generateImage}\r\n        title=\"Generate Image\"\r\n      ></Button>\r\n      <Text onPress={handlePress} style={styles.text2}>\r\n        Wanna see other's imaginations? ðŸ¤¯\r\n      </Text>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 25,\r\n    display: \"flex\",\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  input: {\r\n    minHeight: 40,\r\n    width: 200,\r\n    borderColor: \"#3C84AB\",\r\n    color: \"black\",\r\n    borderRadius: 10,\r\n    borderWidth: 2,\r\n    margin: 10,\r\n    padding: 10,\r\n  },\r\n  image: {\r\n    width: 300,\r\n    height: 300,\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    borderRadius: 20,\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    fontFamily: \"Montserrat\",\r\n    color: \"#205E61\",\r\n  },\r\n  text2: {\r\n    fontSize: 18,\r\n    fontFamily: \"Montserrat\",\r\n    color: \"#205E61\",\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default TextToImage;\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { useFonts } from \"expo-font\";\r\nimport * as Font from \"expo-font\";\r\n\r\nexport default function Header({ title }) {\r\n  return (\r\n    <View style={styles.header}>\r\n      <View>\r\n        <Text style={styles.headerText}>{title}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  headerText: {\r\n    fontSize: 25,\r\n    color: \"#3C84AB\",\r\n    letterSpacing: 1,\r\n    fontFamily: \"Montserrat\",\r\n  },\r\n});\r\n","import { createStackNavigator } from \"react-navigation-stack\";\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport Home from \"../pages/Home\";\r\nimport TextToImage from \"../pages/TextToImage\";\r\nimport Header from \"../shared/header\";\r\nimport React from \"react\";\r\nconst screens = {\r\n  TextToImage: {\r\n    screen: TextToImage,\r\n    navigationOptions: () => {\r\n      return {\r\n        headerTitle: () => <Header title=\"Ayaura\" />,\r\n      };\r\n    },\r\n  },\r\n  Home: {\r\n    screen: Home,\r\n    navigationOptions: () => {\r\n      return {\r\n        headerTitle: () => <Header title=\"Ayaura's Gallery\" />,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\n// home stack navigator screens\r\nconst HomeStack = createStackNavigator(screens);\r\n\r\nexport default createAppContainer(HomeStack);\r\n","import Navigator from \"./routes/homeStack\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport * as Font from \"expo-font\";\nimport { useFonts } from \"expo-font\";\n\nexport default function App() {\n  // axios.defaults.baseURL = \"http://localhost:3001/\";\n  axios.defaults.baseURL = \"https://ayaura.azurewebsites.net/\";\n  const fetchFonts = async () =>\n    await Font.loadAsync({\n      Montserrat: require(\"./assets/fonts/GloriaHallelujah-Regular.ttf\"),\n    });\n  const [loaded] = useFonts({\n    Montserrat: require(\"./assets/fonts/GloriaHallelujah-Regular.ttf\"),\n  });\n\n  if (fetchFonts && loaded) {\n    return <Navigator />;\n  }\n}\n"],"sourceRoot":""}